openapi: 3.0.0
info:
  title: Akkor API
  description: API for Akkor hotel website.
  version: 1.0.0
servers:
  - url: http://localhost:3001/api
paths:
  /auth/register:
    post:
      summary: Register new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                pseudo:
                  type: string
                name:
                  type: string
                surname:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Registered user.

  /auth/login:
    post:
      summary: Login user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: JWT

  /user/search:
    get:
      summary: Search for a user by field
      description: Retrieve users based on specific search parameters such as ID, email, pseudo, name, or surname.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: query
          schema:
            type: string
          description: The unique ID of the user
        - name: email
          in: query
          schema:
            type: string
          description: The email of the user
        - name: pseudo
          in: query
          schema:
            type: string
          description: The pseudo of the user
        - name: name
          in: query
          schema:
            type: string
          description: The name of the user
        - name: surname
          in: query
          schema:
            type: string
          description: The surname of the user
      responses:
        "200":
          description: Successful response with user data
        "449":
          description: Invalid search field provided
        "500":
          description: Internal server error
  /user/me:
    get:
      summary: Get authenticated user data
      description: Retrieve the details of the authenticated user.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response with user data
        "500":
          description: Internal server error
    put:
      summary: Update authenticated user data
      description: Update user details like email, name, surname, pseudo, or password.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                surname:
                  type: string
                pseudo:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: User updated successfully
        "449":
          description: Invalid field provided
        "500":
          description: Internal server error
    delete:
      summary: Delete authenticated user
      description: Remove the authenticated user from the system.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User deleted successfully
        "500":
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT